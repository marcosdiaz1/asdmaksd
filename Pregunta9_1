package arreglo;

import java.util.ArrayList;

import clase.Alumno;

public class ArregloAlumnos {
	//  Atributo privado
	private ArrayList <Alumno> alu;
	//  Constructor
    public ArregloAlumnos() {
        alu = new ArrayList <Alumno> ();
    	adicionar(new Alumno(123, "Ana", 19, 15));
    	adicionar(new Alumno(456, "Juan", 15, 14));
    	adicionar(new Alumno(789, "Pedro", 17, 19));
    	adicionar(new Alumno(302, "David", 13, 18));
    	adicionar(new Alumno(417, "Carlos", 20, 19));
    	adicionar(new Alumno(641, "Jorge", 12, 13));
    	adicionar(new Alumno(208, "María", 15, 17));
    	adicionar(new Alumno(820, "José", 11, 10));
    }
	//  Operaciones públicas básicas
	public void adicionar(Alumno x) {
		alu.add(x);
	}
	public int tamanio() {
		return alu.size();
	}
	public Alumno obtener(int i) {
		return alu.get(i);
	}
	//  Operaciones públicas complementarias
	public int cantAprobados() {
    	int cantA = 0;
    	for(int i=0;i<tamanio();i++){
    		if(obtener(i).promedio()>=13){
    			cantA++;
    		}
    	}
    	return cantA;
    }
	public int cantDesaprobados() {
    	int cantD = 0;
    	for(int i=0;i<tamanio();i++){
    		if(obtener(i).promedio()<13){
    			cantD++;
    		}
    	}
    	return cantD;
    }
	public String nomPrimerDesaprobado(){
		for(int i=0;i<tamanio();i++){
    		if(obtener(i).promedio()<13){
    			return obtener(i).getNombre();
    		}
    	}
		return null;
	}
	public String nomUltimoAprobado(){
		for(int i=tamanio()-1;i>=0;i--){
    		if(obtener(i).promedio()>=13){
    			return obtener(i).getNombre();
    		}
    	}
		return null;
	}
	public String nomSegundoDesaprobado(){
		int cont = 0;
		for(int i=0;i<tamanio();i++){
    		if(obtener(i).promedio()<13){
    			cont++;
    		}
    		if(cont==2){
    			return obtener(i).getNombre();
    		}
    	}
		return null;
	}
	public String nomPenultimoAprobado(){
		int cont = 0;
		for(int i=tamanio()-1;i>=0;i--){
    		if(obtener(i).promedio()>=13){
    			cont++;
    		}
    		if(cont==2){
    			return obtener(i).getNombre();
    		}
    	}
		return null;
	}
}




package clase;

public class Alumno {
	
	//  Atributos privados
	private int codigo, nota1, nota2;
	private String nombre;	
	//  Constructor
    public Alumno(int codigo, String nombre, int nota1, int nota2) {
    	this.codigo = codigo;
        this.nombre = nombre;
        this.nota1 = nota1;
        this.nota2 = nota2;
    }
	//  Métodos de acceso público: set/get
	public void setCodigo(int codigo) {
		this.codigo = codigo;
	}
	public void setNombre(String nombre) {
		this.nombre = nombre;
	}
	public void setNota1(int nota1) {
		this.nota1 = nota1;
	}
	public void setNota2(int nota2) {
		this.nota2 = nota2;
	}
	public int getCodigo() {
		return codigo;
	}
	public String getNombre() {
		return nombre;
	}
	public int getNota1() {
		return nota1;
	}
	public int getNota2() {
		return nota2;
	}	    		
	//  Operaciones públicas
	public double promedio() {
		return (nota1 + nota2) / 2.0;
	}
	
}



 Declaración global
	ArregloAlumnos aa = new ArregloAlumnos();
	
	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == btnReportar) {
			actionPerformedBtnReportar(arg0);
		}
		if (arg0.getSource() == btnAdicionar) {
			actionPerformedBtnAdicionar(arg0);
		}
	}
	protected void actionPerformedBtnAdicionar(ActionEvent arg0) {
		/**
		 * Adiciona un nuevo alumno
		 */	
		int codigo = leerCodigo();
		String nombre = leerNombre();
		int nota1 = leerNota1();
		int nota2 = leerNota2();
		Alumno nuevo = new Alumno(codigo, nombre, nota1, nota2);
		aa.adicionar(nuevo);
		listar();
		limpieza();
	}
	protected void actionPerformedBtnReportar(ActionEvent arg0) {
		/**
		 * Visualiza un reporte
		 */
		txtS.setText("");
		imprimir("cantidad de alumnos :  " + aa.tamanio());
		imprimir("cantidad de aprobados :  " + aa.cantAprobados());
		imprimir("cantidad de desaprobados :  " + aa.cantDesaprobados());
		imprimir("nombre primer desaprobado :  " + aa.nomPrimerDesaprobado());
		imprimir("nombre ultimo aprobado :  " + aa.nomUltimoAprobado());
		imprimir("nombre segundo desaprobado :  " + aa.nomSegundoDesaprobado());
		imprimir("nombre penultimo aprobado :  " + aa.nomPenultimoAprobado());
  	}
	//  Métodos tipo void (sin parámetros)
	void imprimir() {
		imprimir("");
	}
	void limpieza() {
		txtCodigo.setText("");
		txtNombre.setText("");
		txtNota1.setText("");
		txtNota2.setText("");
		txtS.setText("");
		txtCodigo.requestFocus();
	}
   	void listar() {
		modelo.setRowCount(0);
		for (int i=0; i<aa.tamanio(); i++) {
			Object[] fila = { aa.obtener(i).getCodigo(),
					          aa.obtener(i).getNombre(),
					          aa.obtener(i).getNota1(),
					          aa.obtener(i).getNota2(),
					          aa.obtener(i).promedio() };
			modelo.addRow(fila);
		}
	}
